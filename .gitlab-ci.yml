image: alt

stages:
  - prepare          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

install_dep:
  stage: prepare
  script:
    - echo "prepare"


build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - apt-get update && apt-get -y install etersoft-build-utils su sudo cmake ctest git-core ccache gcc-c++ etersoft-build-utils catch2-devel libuniset2 libuniset2-extension-common libuniset2-utils libuniset2-devel libpoco-sqlite sqlite3 libpcre2-devel libpcre2 libomniORB-names libomniORB libomniORB-devel libomniORB-COS
    - mkdir ~/tmp/omniORB
    - mkdir build
    - pushd build
    - cmake .. && make
    - popd
    - pushd src/Algorithms/ControlProcess/Tests/
    - start-script-test.sh
    - popd
  artifacts:
    paths:
      - "build/"


unit-test:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  dependencies:
    - build-job
  script:
    #- pushd 
    - echo "Running unit tests... This will take about 50 seconds."


deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - rpm -qa
    - find ./build
    - echo "Application successfully deployed."


